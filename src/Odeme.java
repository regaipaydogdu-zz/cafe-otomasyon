import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.time.LocalDateTime;
import javax.swing.JTextField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Regaip Aydoğdu
 */
public class Odeme extends javax.swing.JFrame {

    /**
     * Creates new form Odeme
     */
    public Odeme() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel1.setText("Ödeme Ekranı");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel2.setText("Masalar:");

        jComboBox1.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel3.setText("Toplam Ücret:");

        jTextField1.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel4.setText("Kasiyer Adı:");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel5.setText("Ödeme Tipi:");

        jComboBox3.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kredi Kartı", "Nakit", "Banka Kartı" }));

        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/business-and-finance.png"))); // NOI18N
        jButton1.setText("Ödeme Yap");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/shop (1).png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addGap(90, 90, 90))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(37, 37, 37))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        setResizable(false);
    }//GEN-LAST:event_formComponentResized

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        ComboBox_Fill("1");
        ComboBox_Fill("2");
        ComboBox_Fill("3");
        Fill_Order();
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Billing();
        Fill_Order();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
        ComboBox_Fill("3");
        Fill_Order();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Odeme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Odeme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Odeme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Odeme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Odeme().setVisible(true);
            }
        });
    }
    
    private void ComboBox_Fill(String query){
        String q_table = "SELECT * FROM `t_table`";
        PreparedStatement ps;
        ResultSet rs;  
        
        try {
            if(query =="1"){
                ps = MyConnection.getConnection().prepareStatement(q_table);
                rs = ps.executeQuery();
                while(rs.next()){
                
                jComboBox1.addItem(rs.getString(2));}
            }
            //jlabel7 doldurcak
            else if(query =="2")
            {
                
                jLabel7.setText(User.name+" "+User.surname);
            }
            //jtextfield1 dolduracak
            else if(query =="3"){
                Sum_Price(jComboBox1.getSelectedItem().toString());
                           
               
            }
            
            
        } catch (Exception e) {
            
        }
        
    }
    
    private void Billing(){
        PreparedStatement ps;
        String q_pay = "insert into t_payment (table_id, orders, price, datetime, personnel, bill_personnel, billing_type)" + " values (?, ?, ?, ?, ?, ?, ?)";
        java.util.Date dt = new java.util.Date();
        java.text.SimpleDateFormat sdf = 
        new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        String currentTime = sdf.format(dt);

        try{
            ps = MyConnection.getConnection().prepareStatement(q_pay);
            ps.setString(1, jComboBox1.getSelectedItem().toString());
            ps.setString(2, jTextArea1.getText());   
            ps.setInt(3, Integer.parseInt(jTextField1.getText()));
            ps.setString(4, currentTime);
            ps.setString(5, Get_PersonnelName(Get_ID(jComboBox1.getSelectedItem().toString())));
            ps.setString(6, jLabel7.getText());
            ps.setString(7, jComboBox3.getSelectedItem().toString());
            ps.execute();
            Clear_Order(jComboBox1.getSelectedItem().toString());
            
        }
        catch(Exception e){
              System.err.println("Hata!");
              System.err.println(e.getMessage());
        }
    
    }
    
    private String Get_PersonnelName(int id_table){
        PreparedStatement ps;
        ResultSet rs;
        String personnel_name = null;
        String q_fill_table = "select * from t_user where id=?";
        try {        
            ps = MyConnection.getConnection().prepareStatement(q_fill_table);
            ps.setInt(1, id_table);
            rs = ps.executeQuery();
            while(rs.next()){
            personnel_name = rs.getString("name");
            personnel_name = personnel_name+" "+rs.getString("surname");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Siparis.class.getName()).log(Level.SEVERE, null, ex);
        }
        return personnel_name;
    
    }
    
    private int Get_ID(String q_value){
        PreparedStatement ps;
        ResultSet rs;
        int return_value =0;
        String query = "SELECT user_id FROM t_order WHERE table_id = ?";
        try {        
            ps = MyConnection.getConnection().prepareStatement(query);
            ps.setString(1, q_value);
            
            rs = ps.executeQuery();
            if(rs.next()){
                return_value = Integer.parseInt(rs.getString("user_id"));
            } 
        } catch (SQLException ex) {
            Logger.getLogger(Siparis.class.getName()).log(Level.SEVERE, null, ex);
        }
        return return_value;
    
    }
    private int Get_Price(int food_id){
        String query = "select price from t_food where id =?";
        PreparedStatement ps;
        ResultSet rs;
        int return_value =0;
        try {        
            ps = MyConnection.getConnection().prepareStatement(query);
            ps.setInt(1, food_id);
            
            rs = ps.executeQuery();
            if(rs.next()){
                return_value = Integer.parseInt(rs.getString("price"));
            } 
        } catch (SQLException ex) {
            Logger.getLogger(Siparis.class.getName()).log(Level.SEVERE, null, ex);
        }
        return return_value;        
    }
    
    private void Sum_Price(String table_id){
        int sum_price =0;
        String query = "select order_id from t_order where table_id =?";
        PreparedStatement ps;
        ResultSet rs;
        try {        
            ps = MyConnection.getConnection().prepareStatement(query);
            ps.setString(1, table_id);
            
            rs = ps.executeQuery();
            while(rs.next()){
                sum_price = sum_price + Get_Price(Integer.parseInt(rs.getString("order_id")));
            } 
        } catch (SQLException ex) {
            Logger.getLogger(Siparis.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField1.setText(Integer.toString(sum_price));
    
    }
    
    private void Fill_Order(){
        jTextArea1.setText("");
        PreparedStatement ps;
        ResultSet rs;
        String q_fill_table = "select * from t_order where table_id=?";
        try {        
            ps = MyConnection.getConnection().prepareStatement(q_fill_table);
            ps.setString(1, jComboBox1.getSelectedItem().toString());
            rs = ps.executeQuery();
            while(rs.next()){
                String food_name = Siparis.Get_Food_Name(Integer.parseInt(rs.getString("order_id")));
                jTextArea1.setText(food_name+"\n"+jTextArea1.getText());
            }

           
        } catch (SQLException ex) {
            Logger.getLogger(Siparis.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
    }
    private void Clear_Order(String table_id){
        PreparedStatement ps;
        String q_clear_order = "delete from t_order where table_id =?";
        try {        
            ps = MyConnection.getConnection().prepareStatement(q_clear_order);
            ps.setString(1, table_id);
            ps.execute();
            jTextField1.setText(" ");
                   
        } catch (SQLException ex) {
            Logger.getLogger(Siparis.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
